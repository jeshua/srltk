
src/main/scala/srltk/test/policyevaluation/TestGridWorldPE.scala,521
class TestGridWorldPE(visualize: Boolean = true) extends Test2DPE(visualize) {TestGridWorldPE36,1275
  def getState(x: Double, y: Double) = new GridWorldState(x.toInt, y.toInt)getState41,1482
  def run(lf: (Double) => LearnerV = null, name: String = ""): Double = {run43,1559
object TestGridWorldPE {TestGridWorldPE52,1815
  def main(args: Array[String]): Unit = {main53,1840
    def lf(gamma: Double) = new TD(.01, 0, gamma, 0, 0)lf55,1943
    def lf2(gamma: Double) = new TD(.5, 0, gamma, 0, 0)lf259,2123

src/main/scala/srltk/test/policyevaluation/Test2DPE.scala,1434
class AgentWrapper(learner: CanLearn, policy: TestPolicy, ex: FeatureTransform = null) extends Agent(ex) {AgentWrapper38,1278
  override def learn(o1: Observation): Unit =learn39,1385
  override def learn(o1: Observation, a1: Action, o2: Observation): Unit =learn41,1454
  override def learn(otm2: Observation, atm2: Action, otm1: Observation, atm1: Action, ot: Observation): Unit =learn43,1560
  override def act(o: Observation): Action = policy.getAction(o.state)act45,1719
  override def onImprint() = learner.imprint(imprintedO, imprintedA)onImprint46,1790
abstract class Test2DPE(val visualize: Boolean = true) {Test2DPE49,1862
abstract class Test2DPE(val visualize: Boolean = true) {Test2DPE49,1862
  def getState(x: Double, y: Double): StategetState59,2147
  def learnerV2D(learner: LearnerV)(x: Double, y: Double) = {learnerV2D67,2348
  def realV2D(policy: TestPolicy)(x: Double, y: Double) = {realV2D75,2580
  def RMSE(realV2D: (Double, Double) => Double, learnerV2D: (Double, Double) => Double)() = {RMSE80,2744
  def createValueVis(valFunction: (Double, Double) => Double): ValueFunctionVisualizer =createValueVis94,3351
  def setupVis(policy: TestPolicy, learner: LearnerV) {setupVis106,3774
  def setUpdateVisFunction(f: (Int, () => Double, ActivePlot) => Unit) {setUpdateVisFunction131,4560
  def updateVis(timestep: Int) {updateVis135,4669
  def runTest(domain: Domain,runTest165,5342

src/main/scala/srltk/test/policyevaluation/TestPuddleWorldPE.scala,476
class TestPuddleWorldPE(visualize: Boolean = true) extends Test2DPE(visualize) {TestPuddleWorldPE36,1281
  def getState(x: Double, y: Double) = new PuddleWorldState(x, y)getState43,1481
  def run(lf: (Double) => LearnerV = null, steps: Int = 100000, useEx: Boolean = true): Double = {run50,1635
object TestPuddleWorldPE {TestPuddleWorldPE60,1929
  def main(args: Array[String]): Unit = {main61,1956
    def lf(gamma: Double) = new TD(.01, 0, gamma, 0, 0)lf62,1998

src/main/scala/srltk/test/policyevaluation/TestMountainCarPE.scala,484
class TestMountainCarPE(visualize: Boolean = true) extends Test2DPE(visualize) {TestMountainCarPE37,1315
  def getState(x: Double, y: Double) = new MountainCarState(x, y, rng)getState44,1515
  def run(lf: (Double) => LearnerV = null, steps: Int = 100000, useEx: Boolean = true): Double = {run51,1743
object TestMountainCarPE {TestMountainCarPE61,2040
  def main(args: Array[String]): Unit = {main62,2067
    def lf(gamma: Double) = new TD(.1, 0, gamma, -20, .01)lf64,2151

src/main/scala/srltk/test/control/TestSarsaGridWorld.scala,110
object TestSarsaGridWorld {TestSarsaGridWorld60,2090
  def main(args: Array[String]): Unit = {main63,2140

src/main/scala/srltk/test/control/TestSarsaBallBounceWorld.scala,122
object TestSarsaBallBounceWorld {TestSarsaBallBounceWorld44,1569
  def main(args: Array[String]): Unit = {main47,1638

src/main/scala/srltk/test/control/TestRunDomains.scala,495
object TestRunMountainCarTestRunMountainCar44,1593
  def apply(agent : Agent,episodes : Int,  visuals :Boolean = true)apply55,1917
object TestRunPuddleWorldTestRunPuddleWorld62,2051
  def apply(agent : Agent,episodes : Int,  visuals :Boolean = true)apply71,2279
  def run2(agent : Agent, timesteps: Int,  visuals :Boolean = true)run275,2409
object TestRunBallBounceWorldTestRunBallBounceWorld82,2544
  def apply(agent : Agent, timesteps : Int, visuals :Boolean = true)apply95,2839

src/main/scala/srltk/test/control/TestRun.scala,264
object TestRun {TestRun41,1530
      def V2D(x: Double, y: Double) = {V2D72,2454
      def MaxA2D(x: Double, y: Double): Int = {MaxA2D78,2754
    def runEpisodes(maxEps: Int) {runEpisodes99,3484
    def runTimesteps(timesteps: Int) {runTimesteps130,4299

src/main/scala/srltk/test/control/TestSarsaMountainCar.scala,114
object TestSarsaMountainCar {TestSarsaMountainCar37,1370
  def main(args: Array[String]): Unit = {main39,1430

src/main/scala/srltk/test/control/TestSarsaPuddleWorld.scala,114
object TestSarsaPuddleWorld {TestSarsaPuddleWorld44,1569
  def main(args: Array[String]): Unit = {main46,1622

src/main/scala/srltk/test/features/CMACVisualizer2D.scala,167
object CMACVisualizer2D {CMACVisualizer2D33,1209
  def main(args: Array[String]): Unit = {main35,1236
  def f(g: Graphics, dimension: Dimension): Unit =f40,1352

src/main/scala/srltk/test/features/CMACVisualizer3D.scala,163
object CMACVisualizer3D {CMACVisualizer3D56,2103
  def main(args: Array[String]): Unit = {main58,2130
  def draw(trans: TransformGroup): Unit = {draw63,2289

src/main/scala/srltk/test/domains/TestPolicy.scala,481
abstract class TestPolicy extends Agent {TestPolicy25,997
abstract class TestPolicy extends Agent {TestPolicy25,997
  def getValue(s: State): DoublegetValue26,1039
  def getInitialState(): StategetInitialState27,1072
  def getAction(s: State): ActiongetAction28,1103
  def learn(otm1: Observation, atm1: Action, ot: Observation): Unit = ()learn31,1158
  def act(o: Observation): Action = getAction(o.state)act33,1274
  override def onImprint() = ()onImprint35,1422

src/main/scala/srltk/test/domains/GridWorld.scala,1548
class GridWorld() extends Domain(GridWorld33,1122
object GridWorld {GridWorld39,1234
  def stateToInt(s: GridWorldState) = {stateToInt45,1355
  def atGoal(x: Int, y: Int) = x == goalX && y == goalYatGoal53,1603
  def rewardFunction(s1: State, a: Action, s2: State): Double = {rewardFunction55,1660
  def getInitial = new GridWorldState(rng.nextInt(width), rng.nextInt(height))getInitial60,1837
  def main(args: Array[String]): Unit = {main62,1917
class GridWorldAction(index: Int) extends Action(index, 4) {GridWorldAction71,2136
  override def manufacture(newInd: Int) = new GridWorldAction(newInd)manufacture72,2197
  override def name() =name73,2267
object GridWorldAction {GridWorldAction82,2412
  def get(name: String): GridWorldAction = {get83,2437
class GridWorldState(val x: Int, val y: Int) extends TabularState {GridWorldState93,2701
  def this() = this(0, 0)this94,2769
  def numStates() = GridWorld.numStatesnumStates98,2839
  def index() = stateToInt(this)index99,2879
  def getInitial = GridWorld.getInitialgetInitial101,2913
  def exampleAction = new GridWorldAction(0)exampleAction102,2953
  def exampleObservation = observationexampleObservation103,2998
  def absorbing = atGoal(x, y)absorbing105,3038
  def successor(action: Action): GridWorldState =successor107,3070
  def observation(): Observation = {observation119,3525
object GridWorldRenderer extends StateRenderer {GridWorldRenderer129,3827
  def render(state: State, g2d: Graphics2D, dimension: Dimension) = {render132,3898

src/main/scala/srltk/test/domains/GridWorldTests.scala,341
object GridWorldTests {GridWorldTests24,929
  class Policy1(gamma: Double)Policy127,1017
    def V2D(x: Int, y: Int) = getValue(new GridWorldState(x, y))V2D30,1074
    def getValue(s: State) = {getValue32,1140
    def getInitialState() = GridWorld.getInitialgetInitialState41,1511
    def getAction(s: State) = {getAction43,1561

src/main/scala/srltk/test/domains/PuddleWorldTests.scala,508
object PuddleWorldTests {PuddleWorldTests27,1047
  class Policy1(gamma: Double) extends TestPolicy {Policy130,1108
    def V2D(x: Double, y: Double) = getValue(new PuddleWorldState(x, y))V2D33,1197
    def getEpVal(s: PuddleWorldState): Double = {getEpVal37,1419
    override def getValue(s: State) = {getValue41,1589
    def getInitialState() = PuddleWorld.getInitialgetInitialState54,1973
    def getAction(s: State) = {getAction56,2025
  def main(args: Array[String]): Unit = {main74,2599

src/main/scala/srltk/test/domains/VisGridWorldValue.scala,176
object VisGridWorldValue {VisGridWorldValue26,1038
  def main(args: Array[String]): Unit = {main28,1066
    def v(x: Double, y: Double) = p.V2D(x.toInt, y.toInt)v30,1135

src/main/scala/srltk/test/domains/BallBounceWorldTests.scala,385
object BallBounceWorldTests {BallBounceWorldTests27,1047
  class Policy1(gamma: Double = .9) extends TestPolicy {Policy130,1112
    def getEpVal(s: BallBounceWorldState): Double = {getEpVal34,1263
    override def getValue(s: State) = {getValue42,1445
    def getInitialState() = BallBounceWorldState()getInitialState46,1500
    def getAction(s: State) = {getAction48,1552

src/main/scala/srltk/test/domains/MountainCar.scala,1877
class MountainCar(rng: Random) extends Domain(MountainCar.getInitial(rng),MountainCar36,1236
  def this() = this(new Random())this39,1380
  def createState(d1 : Double, d2 : Double) = new MountainCarState(d1,d2,rng)createState41,1417
object MountainCar {MountainCar50,1717
  def altitude(x: Double) = -scala.math.sin(frequency * x)altitude57,1958
  def slope(x: Double) = scala.math.cos(frequency * x)slope58,2017
  def randomX(rng: Random) = (rng.nextDouble() * (xMax - xMin)) + xMinrandomX67,2261
  def randomXDot(rng: Random) = (rng.nextDouble() * (xDotMax - xDotMin)) + xDotMinrandomXDot68,2332
  def getInitial(rng: Random) = new MountainCarState(randomX(rng), randomXDot(rng), rng)getInitial69,2415
  def rewardFunction(s1: State, a: Action, s2: State): Double = {rewardFunction71,2505
  def main(args: Array[String]): Unit = {main76,2676
class MountainCarAction(index: Int) extends Action(index, 3) {MountainCarAction85,2897
  override def manufacture(newInd: Int) = new MountainCarAction(newInd)manufacture86,2960
  override def name() =name87,3032
class MountainCarState(val x: Double, val xDot: Double, val rng: Random) extends State {MountainCarState97,3227
  def exampleAction() = new MountainCarAction(0)exampleAction100,3340
  def exampleObservation() = observationexampleObservation102,3390
  def getInitial = MountainCar.getInitial(rng)getInitial104,3432
  def absorbing = x >= xMaxabsorbing106,3480
  def successor(action: Action): MountainCarState =successor108,3509
  def observation(): Observation = {observation130,4288
object MountainCarRenderer extends StateRenderer {MountainCarRenderer138,4524
  def xToYs(x: Double, size: Int, box_size: Int): Int =xToYs142,4600
  def xToXs(x: Double, size: Int, box_size: Int): Int =xToXs145,4749
  def render(s: State, g2d: Graphics2D, d: Dimension) =render148,4865

src/main/scala/srltk/test/domains/PuddleWorld.scala,1970
class PuddleWorld() extends Domain(PuddleWorld35,1186
  def createState(d1 : Double, d2 : Double) = new PuddleWorldState(d1,d2)createState40,1322
object PuddleWorld {PuddleWorld44,1439
  def inPuddle(puddle: (Double, Double, Double, Double), x: Double, y: Double) = {inPuddle62,1933
  def distToEdge(puddle: (Double, Double, Double, Double), x: Double, y: Double) = {distToEdge66,2171
    def dists = List(dists68,2257
  def distToEdge(x: Double, y: Double): Double = {distToEdge76,2522
  def getReward(x: Double, y: Double) = {getReward81,2754
  def atGoal(x: Double, y: Double) = x > goalX && y < goalYatGoal85,2870
  def rewardFunction(s1: State, a: Action, s2: State): Double = {rewardFunction87,2931
  def getInitial = new PuddleWorldState(rng.nextDouble, rng.nextDouble)getInitial92,3088
  def main(args: Array[String]): Unit = {main94,3161
class PuddleWorldAction(index: Int) extends Action(index, 4) {PuddleWorldAction103,3382
  override def manufacture(newInd: Int) = new PuddleWorldAction(newInd)manufacture104,3445
  override def name() =name105,3517
object PuddleWorldAction {PuddleWorldAction114,3662
  def get(name: String): PuddleWorldAction = {get115,3689
class PuddleWorldState(val x: Double, val y: Double) extends State {PuddleWorldState125,3957
  def this() = this(0, 0)this126,4026
  def getInitial = PuddleWorld.getInitialgetInitial129,4076
  def exampleAction = new PuddleWorldAction(0)exampleAction130,4118
  def exampleObservation = observationexampleObservation131,4165
  def absorbing = atGoal(x, y)absorbing133,4205
  def successor(action: Action): PuddleWorldState =successor135,4237
  def observation(): Observation = {observation155,4928
object PuddleWorldRenderer extends StateRenderer {PuddleWorldRenderer163,5160
  def render(state: State, g2d: Graphics2D, dimension: Dimension) = {render166,5235
    def drawPuddle(puddle: (Double, Double, Double, Double)) = {drawPuddle172,5450

src/main/scala/srltk/test/domains/Domain2D.scala,104
trait Domain2D {Domain2D24,948
  def createState(d1 : Double, d2 : Double) : StatecreateState25,965

src/main/scala/srltk/test/domains/MountainCarTests.scala,533
object MountainCarTests {MountainCarTests27,1047
  class Policy1(gamma: Double = .99) extends TestPolicy {Policy130,1108
    def V2D(x: Double, y: Double) = getValue(new MountainCarState(x, y, rng))V2D31,1166
    def getEpVal(s: MountainCarState): Double = {getEpVal35,1338
    override def getValue(s: State) : Double = {getValue43,1516
    def getInitialState() = MountainCar.getInitial(rng)getInitialState64,2029
    def getAction(s: State) = {getAction66,2086
  def main(args: Array[String]): Unit = {main83,2521

src/main/scala/srltk/test/domains/BallBounceWorld.scala,1933
class BallBounceWorld() extends Domain(BallBounceWorld35,1186
object BallBounceWorld {BallBounceWorld41,1292
  private def distance(x1: Double, y1: Double, x2: Double, y2: Double) =distance52,1541
  def withinBall(state: BallBounceWorldState): Boolean =withinBall55,1697
  def withinAura(state: BallBounceWorldState): Boolean =withinAura57,1850
  def withinLOS(state: BallBounceWorldState): Boolean =withinLOS59,2007
  def getReward(state: BallBounceWorldState): Double = {getReward62,2167
  def main(args: Array[String]): Unit = {main68,2306
class BallBounceWorldAction(index: Int) extends Action(index, 4) {BallBounceWorldAction77,2531
  override def manufacture(newInd: Int) = new BallBounceWorldAction(newInd)manufacture78,2598
  override def name() =name79,2674
object BallBounceWorldState {BallBounceWorldState89,2892
  def apply() = new BallBounceWorldState(0d, 0d, 0.5, 0.5, 0.1)apply91,2949
class BallBounceWorldState(BallBounceWorldState94,3016
  def getInitial = BallBounceWorldState()getInitial102,3199
  def exampleAction = new BallBounceWorldAction(0)exampleAction104,3275
  def exampleObservation = observationexampleObservation105,3326
  def absorbing = falseabsorbing106,3365
  def boundTheta(theta: Double): Double =boundTheta108,3390
  def boundCoord(coord: Double) = scala.math.max(0, scala.math.min(1, coord))boundCoord112,3582
  def successor(action: Action): BallBounceWorldState =successor114,3661
  def observation(): Observation = {observation144,4793
object BallBounceWorldRenderer extends StateRenderer {BallBounceWorldRenderer158,5217
  def render(state: State, g2d: Graphics2D, dimension: Dimension) = {render161,5300
    def drawFilled(x: Double, y: Double, radius: Double) {drawFilled166,5482
    def drawOutline(x: Double, y: Double, radius: Double) {drawOutline172,5687
    def drawTheta(x: Double, y: Double, theta : Double) {drawTheta178,5893

src/main/scala/srltk/tools/utils/Bounds2D.scala,191
class Bounds2D(val xMin: Double, val xMax: Double, val yMin: Double, val yMax: Double) {Bounds2D22,883
  def this(b : (Double,Double,Double,Double)) = this(b._1,b._2,b._3,b._4)this23,972

src/main/scala/srltk/tools/utils/LibFunctions.scala,255
package object LibFunctions {LibFunctions22,883
 def unsafeAddDir(dir: String) = try {unsafeAddDir23,913
    val field = classOf[ClassLoader].getDeclaredField("usr_paths")Of24,952
  def addLibs() = unsafeAddDir("./lib/libs_amd64")  addLibs41,1545

src/main/scala/srltk/tools/utils/ColorUtils.scala,122
object ColorUtils {ColorUtils23,905
  def colorProgression(i: Int) = colors(i % colors.length)colorProgression32,1381

src/main/scala/srltk/tools/utils/Timer.scala,237
package object Timer {Timer24,973
  def time(f : () => Unit) : Double = {time27,1030
  def timeCpu(f : () => Unit) : Double = {timeCpu34,1170
  def userTime() : Long = {userTime40,1308
   def cpuTime() : Long = {cpuTime44,1452

src/main/scala/srltk/tools/learners/TabularTD.scala,516
class TabularTD(val alpha: Double, val lambda: Double, val gamma: Double, initialValue: Double = 0)TabularTD39,1306
  def value(o: Observation): Double = {value48,1567
  override def onImprint() = {onImprint54,1740
  override def learn(otm2: Observation, atm2: Action, otm1: Observation, atm1: Action, ot: Observation) = learn(otm1, ot)learn67,2141
  override def learn(o1: Observation, a1: Action, o2: Observation) = learn(o1, o2)learn68,2263
  def learn(o1: Observation, o2: Observation) {learn69,2346

src/main/scala/srltk/tools/learners/RLSTD.scala,415
class RLSTD(val gamma: Double)RLSTD37,1237
  def value(o : Observation) : Double = theta.t * o.featuresvalue60,1816
  override def learn(otm2: Observation, atm2: Action, otm1: Observation, atm1: Action, ot: Observation) = learn(otm1, ot)learn63,1929
  override def learn(o1: Observation, a1: Action, o2: Observation) = learn(o1, o2)learn64,2051
  def learn(o1: Observation, o2: Observation) {learn65,2134

src/main/scala/srltk/tools/learners/TD.scala,501
class TD(val alpha: Double, val lambda: Double, val gamma: Double, initialValue: Double = 0, beta: Double = 0)TD38,1262
  override def value(o: Observation): Double = {o.features dot theta}value50,1686
  override def learn(otm2: Observation, atm2: Action, otm1: Observation, atm1: Action, ot: Observation) = learn(otm1, ot)learn63,2189
  override def learn(o1: Observation, a1: Action, o2: Observation) = learn(o1, o2)learn64,2311
  def learn(o1: Observation, o2: Observation) {learn65,2394

src/main/scala/srltk/tools/learners/QLearning.scala,432
class QLearning(val alpha: Double, val lambda: Double, val gamma: Double, initialValue: Double = 0, rng: scala.util.Random)QLearning38,1262
  def value(o: Observation): Double = o.features dot thetavalue47,1594
  private def phiSA(o: Observation, a: Action) = {phiSA50,1672
  def getQ(o: Observation, a: Action) = value(phiSA(o, a))getQ65,2277
  def learn(otm1: Observation, atm1: Action, ot: Observation) = {learn67,2337

src/main/scala/srltk/tools/learners/Sarsa.scala,434
class Sarsa(val alpha0: Double,Sarsa32,1029
  private def phiSA(o: Observation, a: Action) = {phiSA40,1256
  def getQ(o: Observation, a: Action) = TD.value(phiSA(o, a))getQ47,1572
  def learn(otm1: Observation, atm1: Action, ot: Observation) = ()learn50,1659
  override def learn(otm2: Observation, atm2: Action, otm1: Observation, atm1: Action, ot: Observation) =learn51,1726
  override def onImprint() =onImprint55,1933

src/main/scala/srltk/tools/learners/LearnerV.scala,167
abstract class LearnerV extends CanLearn {LearnerV25,948
abstract class LearnerV extends CanLearn {LearnerV25,948
  def value(o: Observation): Doublevalue26,991

src/main/scala/srltk/tools/learners/LearnerQ.scala,336
abstract class LearnerQ(val rng: Random) extends CanLearn with HasQFunction with Imprintable {LearnerQ27,1004
abstract class LearnerQ(val rng: Random) extends CanLearn with HasQFunction with Imprintable {LearnerQ27,1004
  def getQ(o: Observation, a: Action): DoublegetQ29,1100
  def getMaxA(o: Observation): Int =getMaxA31,1147

src/main/scala/srltk/tools/features/CMAC.scala,608
class CMAC(CMAC34,1291
  private def normalize(value: Double, dim: Int) = (value - ranges(dim)._1) / binWidth(dim)normalize52,1844
  private def getTile(value: Double, dim: Int, grid: Int): Int = {getTile56,2045
  private def getTile(input: Vector[Double], grid: Int): Int = //Vector[Int] =getTile67,2434
      def accumulate(i: Int = 0, mult: Int = 1): Int = {accumulate69,2519
  def getTilingIndices(input: Vector[Double]): Vector[Int] =getTilingIndices76,2724
  def getTiling(input: VectorCol[Double]): VectorCol[Double] =getTiling90,3203
  override def length = numFeatureslength102,3630

src/main/scala/srltk/tools/actors/EpsilonGreedy.scala,311
class EpsilonGreedy(EpsilonGreedy34,1205
  override def onImprint() = ()onImprint39,1338
  def disableExploration() = {tmpEpsilon = epsilon; epsilon = 0;}disableExploration42,1398
  def enableExploration() = epsilon = tmpEpsilonenableExploration43,1464
  def act(o: Observation): Action = {act46,1598

src/main/scala/srltk/tools/agent/EGreedyAgent.scala,655
class EGreedyAgent(EGreedyAgent32,1237
  def getQ(o : Observation, a : Action) = learner.getQ(o,a) getQ38,1425
  def getMaxA(o : Observation) = learner.getMaxA(o)getMaxA39,1486
  def enableExploration() = actor.enableExploration()enableExploration46,1620
  def disableExploration() = actor.disableExploration()disableExploration47,1674
  override def act(o: Observation) =act50,1760
  def learn(otm1: Observation, atm1: Action, ot: Observation): Unit = ()learn53,1841
  override def learn(otm2: Observation, atm2: Action, otm1: Observation, atm1: Action, ot: Observation): Unit =learn54,1914
  override def onImprint() =onImprint57,2097

src/main/scala/srltk/tools/agent/EGreedySarsa.scala,41
class EGreedySarsa(EGreedySarsa32,1183

src/main/scala/srltk/tools/agent/EGreedyQLearning.scala,49
class EGreedyQLearning(EGreedyQLearning32,1220

src/main/scala/srltk/tools/linearalgebra/LinearAlgebra.scala,1283
package object LinearAlgebra {LinearAlgebra15,473
  private def requireNonEmptyMatrix[V](mat: Matrix[V]) = {requireNonEmptyMatrix17,505
  def toDense(d : scalala.tensor.mutable.Vector[Double])  : DenseVector[Double]  = {toDense22,652
  def toDense(d : scalala.tensor.mutable.Matrix[Double])  : DenseMatrix[Double]  = {toDense29,816
  def lNorm(d : Vector[Double], l : Int = 2) : Double = {lNorm35,988
  def transpose(d : DenseMatrix[Double]) : DenseMatrix[Double] = {transpose42,1143
  def findBasis(A : DenseMatrix[Double], rank : Int = -1, tol : Double = 0.1) findBasis54,1415
  def estRank(A : DenseMatrix[Double], thresh : Double = 1e-10) : Int = {estRank81,2164
  def estRankSVD(D : DenseVector[Double], thresh : Double = 1e-10) : Int = {estRankSVD93,2480
    def r(rank : Int) : Int = {r97,2632
  def estRankQR(R : DenseMatrix[Double], thresh : Double = 1e-10) : Int = {estRankQR112,2974
    def r(rank : Int) : Int = {r115,3109
  def qr(A: DenseMatrix[Double], skipQ : Boolean = false): (DenseMatrix[Double], DenseMatrix[Double]) = {qr130,3472
  def qrp(A: DenseMatrix[Double]): (DenseMatrix[Double], DenseMatrix[Double], DenseMatrix[Int], DenseVector[Int]) = {qrp196,5767
  def qrDecomposeR(R : DenseMatrix[Double], k : Int)qrDecomposeR267,8119

src/main/scala/srltk/tools/linearalgebra/MiscStats.scala,527
package object MiscStats {MiscStats6,114
	def diag(n : Double, length : Int) : DenseMatrix[Double]  = {diag34,781
	def diag(v : DenseVector[Double]) : DenseMatrix[Double] = {diag39,914
	def colSums(X : DenseMatrix[Double]) : DenseVectorCol[Double] = {colSums49,1141
	def colMeans(X : DenseMatrix[Double]) : DenseVectorCol[Double] = {colMeans57,1350
	def rowSums(X : DenseMatrix[Double]) : DenseVectorCol[Double] = {rowSums62,1492
	def rowMeans(X : DenseMatrix[Double]) : DenseVectorCol[Double] = {rowMeans71,1714

src/main/scala/srltk/tools/linearalgebra/StrongRRQR.scala,720
class StrongRRQR(A : DenseMatrix[Double], tol : Double, maxRank : Int = 500, alg : Int = 5){StrongRRQR25,659
  def update(triangularize : Boolean = true) : Boolean =  {update51,1475
  def calcOmega(Akinv : DenseMatrix[Double]) : DenseVector[Double] = {calcOmega88,2220
  def calcGamma(Ck : DenseMatrix[Double]) : DenseVector[Double] =  {calcGamma94,2447
  def calcJMax(gamma : DenseVector[Double]) : Int = {calcJMax99,2662
  def findIJ() : (Int,Int) = {findIJ107,2809
  def swapCols(i : Int, j : Int){swapCols118,3139
  def detRatio(i : Int, j : Int) : Double = {detRatio129,3417
  def goodSwap(i : Int, j : Int) : Boolean = {goodSwap134,3604
  def goodSwapExists : Boolean = {goodSwapExists144,3890

src/main/scala/srltk/vis/spacesconnect/SpacesWorldInterface.scala,1239
class DummyObservation extends spaces.framework.perception.Observation {}DummyObservation42,1605
class DummyAgent(val w: SpacesWorldInterface) extends spaces.framework.agent.Agent {DummyAgent44,1680
  def initTrial(exampleAction: Action): Unit = ()initTrial45,1765
  def initEpisode(initialObservation: Observation): Unit = ()initEpisode46,1815
  def observeStep(previousAction: Action, resultingObservation: Observation): Unit = ()observeStep47,1877
  def getNextAction(): Action = {getNextAction48,1965
class SpacesWorldInterface(var state: State, val stateRenderer: StateRenderer,SpacesWorldInterface55,2119
  def this(state: State, exampleAction: srltk.api.domain.Action) =this59,2343
  def this(domain: Domain) =this61,2448
  def takeAction(action: spaces.framework.util.action.Action): Unit = {takeAction66,2722
  def draw(g2d: Graphics2D, size: Dimension): Dimension = {draw72,2964
  def generateObservation(): Observation = {generateObservation77,3113
  def getExampleAction(): SpacesActionInterface = new SpacesActionInterface(exampleAction)getExampleAction82,3246
  def startNewEpisode(): Unit = this.state = state.getInitialstartNewEpisode83,3337
  def setWorld(w: World): Unit = ()setWorld84,3399

src/main/scala/srltk/vis/spacesconnect/SpacesActionInterface.scala,565
class SpacesActionInterface(val index: Int, val numActions: Int, val a: Action)SpacesActionInterface26,918
  def this(action: Action) = this(action.index, action.numActions, action)this28,1046
  def getValue(): Int = indexgetValue30,1122
  def getValues(): Array[spaces.framework.util.action.Action] =getValues31,1152
  def getAction(i: Int): SpacesActionInterface = new SpacesActionInterface(i, numActions, a)getAction38,1396
  def srltkAction() = a.manufacture(index);srltkAction39,1489
  override def toString() = srltkAction().nametoString40,1533

src/main/scala/srltk/vis/StateViewer.scala,394
class StateViewer(width: Int, height: Int, renderer: StateRenderer) extends JFrame {StateViewer27,968
  def updateDisplay = panel.updateDisplay _updateDisplay28,1053
class StateViewerPanel(dimension: Dimension, renderer: StateRenderer) extends JPanel {StateViewerPanel39,1328
  override def paint(g: Graphics): Unit =paint45,1510
  def updateDisplay(s: State) = {updateDisplay53,1728

src/main/scala/srltk/vis/ValueFunctionVisualizer2D.scala,760
trait ValueFunctionVisualizer {  ValueFunctionVisualizer33,1179
  def getFrame : JFramegetFrame34,1213
  def update() : Unitupdate35,1237
  def reRender() : UnitreRender36,1259
  def setValueFunction(v : (Double,Double) => Double)setValueFunction37,1283
class ValueFunctionVisualizer2D(ValueFunctionVisualizer2D42,1343
  def getFrame = visgetFrame56,1675
  def update() = vis.repaint()update57,1696
  def reRender() = vis.repaint()reRender58,1727
  def setValueFunction(v : (Double,Double)=>Double) = {this.V = v}setValueFunction59,1760
  def f(g: Graphics, dimension: Dimension): Unit =f62,1851
      def getX(percent: Float) = (xSize) * percent + xMingetX67,2011
      def getY(percent: Float) = (ySize) * percent + yMingetY68,2069

src/main/scala/srltk/vis/ValueFunctionVisualizer3D.scala,423
class ValueFunctionVisualizer3D(val bounds: Bounds2D,ValueFunctionVisualizer3D72,2880
  def getFrame = framegetFrame75,3009
  def setValueFunction(v: (Double, Double) => Double) = { this.V2D = v }setValueFunction83,3102
    def f(x: Double, y: Double) = V2D(x, y)f86,3206
    def createChart(): Chart = {createChart109,4054
    			override def getInstance() :  IAxe = new ContourAxeBox(box);getInstance115,4169

src/main/scala/srltk/vis/play3d.scala,343
class Play3D(width: Int, height: Int) extends JFrame {Play3D26,747
  def createScene(): BranchGroup = {createScene80,2361
  def draw(trans: TransformGroup): Unit = {draw135,4138
object CameraView {CameraView178,5446
class CameraView {CameraView182,5542
object Play3D {Play3D209,6357
  def main(args : Array[String]){main210,6373

src/main/scala/srltk/vis/DockingVis.scala,35
class DockingVis {DockingVis3,19

src/main/scala/srltk/vis/Visualizer2D.scala,434
class Visualizer2D(width: Int, height: Int, f: (Graphics, Dimension) => Unit) extends JFrame {Visualizer2D31,1112
  def updateDisplay = panel.repaint()updateDisplay36,1326
class Visualizer2DPanel(width: Int, height: Int, f: (Graphics, Dimension) => Unit) extends JPanel {Visualizer2DPanel44,1475
    override def mousePressed(e: MouseEvent): Unit = {mousePressed50,1701
  override def paint(g: Graphics): Unit =paint59,1881

src/main/scala/srltk/vis/Persp.scala,472
class Persp(Persp74,2882
  def this(b : (Double,Double,Double,Double), func : (Double,Double)=>Double) = this(new Bounds2D(b),func)this77,2961
  def getFrame = framegetFrame80,3098
  def setFunction(f: (Double, Double) => Double) = { this.func = f }setFunction81,3121
    def f(x: Double, y: Double) = func(x, y)f83,3220
  def createChart(): Chart = {createChart101,3846
    			override def getInstance() :  IAxe = new ContourAxeBox(box);getInstance106,3942

src/main/scala/srltk/vis/Visualizer3D.scala,288
class Visualizer3D(width: Int, height: Int, draw: (TransformGroup) => Unit) extends JFrame {Visualizer3D57,2076
  def redraw(): Unit = {redraw83,2959
    override def mousePressed(e: MouseEvent): Unit = {mousePressed94,3274
  def createScene(): BranchGroup = {createScene106,3510

src/main/scala/srltk/vis/FilledContour.scala,508
class FilledContour(FilledContour50,1984
  def this(b : (Double,Double,Double,Double), func : (Double,Double)=>Double) = this(new Bounds2D(b),func)this53,2071
  def getFrame = framegetFrame56,2208
  def setFunction(f: (Double, Double) => Double) = { this.func = f }setFunction57,2231
    def f(x: Double, y: Double) = func(x, y)f59,2330
  def createChart(): Chart = {createChart66,2540
    	override def getInstance() : IAxe = {new ContourAxeBox(box)}                        getInstance83,3195

src/main/scala/srltk/vis/MaxAVisualizer2D.scala,266
class MaxAVisualizer2D(MaxAVisualizer2D33,1179
  def f(g: Graphics, dimension: Dimension): Unit =f49,1858
      def getX(percent: Float) = (xSize) * percent + bounds.xMingetX55,2047
      def getY(percent: Float) = (ySize) * percent + bounds.yMingetY56,2112

src/main/scala/srltk/api/domain/Action.scala,287
class Action(val index: Int, val numActions: Int)  {Action25,884
  def this(other: Action) = this(other.index, other.numActions)this26,937
  def manufacture(newInd: Int): Action = new Action(newInd,numActions)manufacture27,1001
  def name(): String = index.toString  name28,1072

src/main/scala/srltk/api/domain/Observation.scala,289
class Observation(Observation28,933
  def this(features: VectorCol[Double]) =this33,1134
  def this(features: Vector[Double], reward: Double, state: State) =this36,1212
  def this(other: Observation) =this39,1329
  def this(other: Observation, v: VectorCol[Double]) =this42,1433

src/main/scala/srltk/api/domain/TabularState.scala,196
abstract class TabularState extends State {TabularState22,882
abstract class TabularState extends State {TabularState22,882
  def numStates: IntnumStates23,926
  def index: Intindex24,947

src/main/scala/srltk/api/domain/Domain.scala,841
class Domain(Domain28,980
	def exampleAction() = state.exampleActionexampleAction33,1106
	def exampleObservation() = state.exampleObservationexampleObservation34,1149
trait StateRenderer {StateRenderer38,1236
  def render(state: State, g2d: Graphics2D, d: Dimension): Dimensionrender39,1258
  def addPrediction(state: State) = predictions += stateaddPrediction41,1369
  def clearPredictions() = predictions.clearclearPredictions42,1426
abstract class State {State47,1567
abstract class State {State47,1567
  def getInitial(): StategetInitial48,1590
  def successor(action: Action): Statesuccessor49,1616
  def observation(): Observationobservation50,1655
  def absorbing: Booleanabsorbing51,1688
  def exampleAction(): ActionexampleAction52,1713
  def exampleObservation(): ObservationexampleObservation53,1743

src/main/scala/srltk/api/driver/SimpleDriver.scala,150
class SimpleDriver(var d: Domain, val a: Agent) {SimpleDriver24,933
  def step(): (State, Observation, Action, Observation, Boolean) =step29,1068

src/main/scala/srltk/api/agent/HasActor.scala,151
trait HasActor {HasActor22,881
  def disableExploration() : UnitdisableExploration24,921
  def enableExploration() : UnitenableExploration25,955

src/main/scala/srltk/api/agent/Imprintable.scala,462
trait Imprintable {Imprintable27,1042
  def isImprinted() = imprintedisImprinted31,1180
  def imprintedO() =imprintedO32,1212
  def imprintedA() =imprintedA37,1368
  def imprint(imprintedObservation: Observation, imprintedAction: Action) {imprint43,1520
  protected def numActions: Int = if(imprintedA==null) 0 else imprintedA().numActionsnumActions52,1768
  implicit def intToAction(i: Int): Action = imprintedA().manufacture(i)intToAction53,1854

src/main/scala/srltk/api/agent/History.scala,425
class History(val maxLength: Int) {History28,993
  def t = observations.lengtht33,1145
  def length(): Int = observations.lengthlength35,1228
  def append(o: Observation): Unit = {append38,1307
  def append(a: Action): Unit = {append48,1594
  def clear(): Unit = { observations.clear; actions.clear(); }clear54,1764
  def o_t(n: Int = 0): Observation = {o_t57,1838
  def a_t(n: Int = 0): Action = {a_t62,1944

src/main/scala/srltk/api/agent/FeatureTransform.scala,403
trait FeatureTransform {FeatureTransform24,949
  def length: Intlength27,1108
class IdentityTransform(outDim : Int) extends FeatureTransform {IdentityTransform31,1152
  def length: Int = outDimlength33,1279
object IdentityTransform { def apply(d: Int) = new IdentityTransform(d) }IdentityTransform35,1308
object IdentityTransform { def apply(d: Int) = new IdentityTransform(d) }apply35,1308

src/main/scala/srltk/api/agent/HasQFunction.scala,152
trait HasQFunction {HasQFunction23,907
  def getQ(o : Observation, a : Action) : DoublegetQ24,928
  def getMaxA(o: Observation): IntgetMaxA25,977

src/main/scala/srltk/api/agent/CanAct.scala,75
trait CanAct{CanAct29,974
  def act(o: Observation): Action  act30,988

src/main/scala/srltk/api/agent/Agent.scala,812
abstract class Agent(val extractor: FeatureTransform) extends CanLearn with CanAct {Agent62,2867
abstract class Agent(val extractor: FeatureTransform) extends CanLearn with CanAct {Agent62,2867
  def this() = this(null)this63,2952
  final def observe(prevAction: Action, o: Observation): Unit =observe76,3253
  final def getAction(): Action =getAction95,3855
  final override def imprint(o: Observation, a: Action) = {imprint103,4027
  override def learn(ot: Observation): Unit = ()learn143,5415
  override def learn(otm1: Observation, atm1: Action, ot: Observation): Unit //only one required to overridelearn144,5464
  override def learn(otm2: Observation, atm2: Action, otm1: Observation, atm1: Action, ot: Observation): Unit = ()learn145,5573
  def act(ot: Observation): Actionact155,5897

src/main/scala/srltk/api/agent/CanLearn.scala,339
trait CanLearn extends Imprintable{CanLearn29,976
  def learn(ot: Observation) : Unit =  ()learn30,1012
  def learn(otm1 : Observation , atm1: Action, ot: Observation) : Unit //only one requiredlearn31,1054
  def learn(otm2 : Observation, atm2 : Action, otm1 : Observation, atm1 : Action, ot : Observation) : Unit = ()learn32,1145

src/test/scala/srltk/tools/linearalgebra/LinearAlgebraTest.scala,207
@RunWith(classOf[JUnitRunner])Of20,681
class LinearAlgebraTest extends FeatureSpec {LinearAlgebraTest21,712
  def kahanMatrix(size : Int, rng : util.Random) : DenseMatrix[Double] = {kahanMatrix86,2511
